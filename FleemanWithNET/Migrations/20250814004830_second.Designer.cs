// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using fleeman_with_dot_net.Repositories;

#nullable disable

namespace fleeman_with_dot_net.Migrations
{
    [DbContext(typeof(FleetDBContext))]
    [Migration("20250814004830_second")]
    partial class second
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("fleeman_with_dot_net.Models.AddOnBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<int>("add_on_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("add_on_book");
                });

            modelBuilder.Entity("fleeman_with_dot_net.Models.AddOnDetails", b =>
                {
                    b.Property<int>("addOnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("addOnId"));

                    b.Property<string>("addOnName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("addOnPrice")
                        .HasColumnType("float");

                    b.HasKey("addOnId");

                    b.ToTable("add_on_details");
                });

            modelBuilder.Entity("fleeman_with_dot_net.Models.AirportDetails", b =>
                {
                    b.Property<int>("Airport_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Airport_Id"));

                    b.Property<string>("Airport_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Airport_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Airport_Id");

                    b.ToTable("airport_details");
                });

            modelBuilder.Entity("fleeman_with_dot_net.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("MemberDetailsMember_Id")
                        .HasColumnType("int");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberDetailsMember_Id");

                    b.ToTable("application_user");
                });

            modelBuilder.Entity("fleeman_with_dot_net.Models.AuthenticationTable", b =>
                {
                    b.Property<int>("AuthId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthId"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role_Id")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthId");

                    b.ToTable("authentication_table");
                });

            modelBuilder.Entity("fleeman_with_dot_net.Models.BookingConfirmationDetails", b =>
                {
                    b.Property<int>("BookingConfirmationDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingConfirmationDetailsId"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<int>("Car_Id")
                        .HasColumnType("int");

                    b.HasKey("BookingConfirmationDetailsId");

                    b.HasIndex("BookingId");

                    b.HasIndex("Car_Id");

                    b.ToTable("booking_confirmation_details");
                });

            modelBuilder.Entity("fleeman_with_dot_net.Models.BookingDetails", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<int?>("AddonBookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DropLocation")
                        .HasColumnType("int");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PickupDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PickupLocation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.ToTable("booking_details");
                });

            modelBuilder.Entity("fleeman_with_dot_net.Models.CarDetails", b =>
                {
                    b.Property<int>("Car_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Car_Id"));

                    b.Property<string>("CarName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FuelStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("MaintenanceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Car_Id");

                    b.ToTable("car_details");
                });

            modelBuilder.Entity("fleeman_with_dot_net.Models.CityDetails", b =>
                {
                    b.Property<int>("City_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("City_Id"));

                    b.Property<string>("City_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State_Id")
                        .HasColumnType("int");

                    b.HasKey("City_Id");

                    b.HasIndex("State_Id");

                    b.ToTable("city_details");
                });

            modelBuilder.Entity("fleeman_with_dot_net.Models.InvoiceHeaderTable", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"));

                    b.Property<DateTime?>("ActualReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("AddonRentalAmount")
                        .HasColumnType("float");

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<double>("CarRentalAmount")
                        .HasColumnType("float");

                    b.Property<int>("DropLocation")
                        .HasColumnType("int");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.HasKey("InvoiceId");

                    b.ToTable("invoice_header_table");
                });

            modelBuilder.Entity("fleeman_with_dot_net.Models.LocationDetails", b =>
                {
                    b.Property<int>("Location_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Location_Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Airport_Id")
                        .HasColumnType("int");

                    b.Property<int?>("City_Id")
                        .HasColumnType("int");

                    b.Property<string>("LocationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("State_Id")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Location_Id");

                    b.HasIndex("City_Id");

                    b.HasIndex("State_Id");

                    b.ToTable("location_details");
                });

            modelBuilder.Entity("fleeman_with_dot_net.Models.MemberDetails", b =>
                {
                    b.Property<int>("Member_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Member_Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreditCard")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("DrivingLicenseId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("DrivingLicenseIssuedBy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DrivingLicenseValidThru")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Idp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("IdpIssuedBy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("IdpValidThru")
                        .HasColumnType("datetime2");

                    b.Property<string>("MemberFirstName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("MemberLastName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<long>("MobileNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("PassportIssuedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PassportValidate")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("Member_Id");

                    b.ToTable("member_details");
                });

            modelBuilder.Entity("fleeman_with_dot_net.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("fleeman_with_dot_net.Models.StaffDetails", b =>
                {
                    b.Property<int>("Staff_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Staff_Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<long>("MobileNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StaffFirstName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("StaffLastName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("Staff_Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("staff_details");
                });

            modelBuilder.Entity("fleeman_with_dot_net.Models.StateDetails", b =>
                {
                    b.Property<int>("State_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("State_Id"));

                    b.Property<string>("State_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("State_Id");

                    b.ToTable("state_details");
                });

            modelBuilder.Entity("fleeman_with_dot_net.Models.VehicleDetails", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"));

                    b.Property<double>("DailyRate")
                        .HasColumnType("float");

                    b.Property<string>("ImgPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MonthlyRate")
                        .HasColumnType("float");

                    b.Property<string>("VehicleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("WeeklyRate")
                        .HasColumnType("float");

                    b.HasKey("VehicleId");

                    b.ToTable("vehicle_details");
                });

            modelBuilder.Entity("fleeman_with_dot_net.Models.ApplicationUser", b =>
                {
                    b.HasOne("fleeman_with_dot_net.Models.MemberDetails", "MemberDetails")
                        .WithMany()
                        .HasForeignKey("MemberDetailsMember_Id");

                    b.Navigation("MemberDetails");
                });

            modelBuilder.Entity("fleeman_with_dot_net.Models.BookingConfirmationDetails", b =>
                {
                    b.HasOne("fleeman_with_dot_net.Models.BookingDetails", "Booking")
                        .WithMany()
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("fleeman_with_dot_net.Models.CarDetails", "Car")
                        .WithMany()
                        .HasForeignKey("Car_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("Car");
                });

            modelBuilder.Entity("fleeman_with_dot_net.Models.CityDetails", b =>
                {
                    b.HasOne("fleeman_with_dot_net.Models.StateDetails", "State")
                        .WithMany()
                        .HasForeignKey("State_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("fleeman_with_dot_net.Models.LocationDetails", b =>
                {
                    b.HasOne("fleeman_with_dot_net.Models.CityDetails", "City")
                        .WithMany()
                        .HasForeignKey("City_Id");

                    b.HasOne("fleeman_with_dot_net.Models.StateDetails", "State")
                        .WithMany()
                        .HasForeignKey("State_Id");

                    b.Navigation("City");

                    b.Navigation("State");
                });

            modelBuilder.Entity("fleeman_with_dot_net.Models.StaffDetails", b =>
                {
                    b.HasOne("fleeman_with_dot_net.Models.ApplicationUser", "User")
                        .WithOne("StaffDetails")
                        .HasForeignKey("fleeman_with_dot_net.Models.StaffDetails", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("fleeman_with_dot_net.Models.ApplicationUser", b =>
                {
                    b.Navigation("StaffDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
